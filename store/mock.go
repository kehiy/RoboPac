// Code generated by MockGen. DO NOT EDIT.
// Source: ./store/interface.go
//
// Generated by this command:
//
//	mockgen -source=./store/interface.go -destination=./store/mock.go -package=store
//

// Package store is a generated GoMock package.
package store

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIStore is a mock of IStore interface.
type MockIStore struct {
	ctrl     *gomock.Controller
	recorder *MockIStoreMockRecorder
}

// MockIStoreMockRecorder is the mock recorder for MockIStore.
type MockIStoreMockRecorder struct {
	mock *MockIStore
}

// NewMockIStore creates a new mock instance.
func NewMockIStore(ctrl *gomock.Controller) *MockIStore {
	mock := &MockIStore{ctrl: ctrl}
	mock.recorder = &MockIStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStore) EXPECT() *MockIStoreMockRecorder {
	return m.recorder
}

// AddClaimTransaction mocks base method.
func (m *MockIStore) AddClaimTransaction(amount float64, time int64, txID, discordID, testNetValAddr string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddClaimTransaction", amount, time, txID, discordID, testNetValAddr)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddClaimTransaction indicates an expected call of AddClaimTransaction.
func (mr *MockIStoreMockRecorder) AddClaimTransaction(amount, time, txID, discordID, testNetValAddr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddClaimTransaction", reflect.TypeOf((*MockIStore)(nil).AddClaimTransaction), amount, time, txID, discordID, testNetValAddr)
}

// ClaimerInfo mocks base method.
func (m *MockIStore) ClaimerInfo(testNetValAddr string) *Claimer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClaimerInfo", testNetValAddr)
	ret0, _ := ret[0].(*Claimer)
	return ret0
}

// ClaimerInfo indicates an expected call of ClaimerInfo.
func (mr *MockIStoreMockRecorder) ClaimerInfo(testNetValAddr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClaimerInfo", reflect.TypeOf((*MockIStore)(nil).ClaimerInfo), testNetValAddr)
}
