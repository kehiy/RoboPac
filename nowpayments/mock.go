// Code generated by MockGen. DO NOT EDIT.
// Source: ./nowpayments/interface.go
//
// Generated by this command:
//
//	mockgen -source=./nowpayments/interface.go -destination=./nowpayments/mock.go -package=nowpayments
//

// Package nowpayments is a generated GoMock package.
package nowpayments

import (
	reflect "reflect"

	store "github.com/kehiy/RoboPac/store"
	gomock "go.uber.org/mock/gomock"
)

// MockINowpayment is a mock of INowpayment interface.
type MockINowpayment struct {
	ctrl     *gomock.Controller
	recorder *MockINowpaymentMockRecorder
}

// MockINowpaymentMockRecorder is the mock recorder for MockINowpayment.
type MockINowpaymentMockRecorder struct {
	mock *MockINowpayment
}

// NewMockINowpayment creates a new mock instance.
func NewMockINowpayment(ctrl *gomock.Controller) *MockINowpayment {
	mock := &MockINowpayment{ctrl: ctrl}
	mock.recorder = &MockINowpaymentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINowpayment) EXPECT() *MockINowpaymentMockRecorder {
	return m.recorder
}

// CreatePayment mocks base method.
func (m *MockINowpayment) CreatePayment(party *store.TwitterParty) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePayment", party)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePayment indicates an expected call of CreatePayment.
func (mr *MockINowpaymentMockRecorder) CreatePayment(party any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePayment", reflect.TypeOf((*MockINowpayment)(nil).CreatePayment), party)
}

// UpdatePayment mocks base method.
func (m *MockINowpayment) UpdatePayment(party *store.TwitterParty) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePayment", party)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePayment indicates an expected call of UpdatePayment.
func (mr *MockINowpaymentMockRecorder) UpdatePayment(party any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePayment", reflect.TypeOf((*MockINowpayment)(nil).UpdatePayment), party)
}
